#Each person write pairwise comparisons between testing and other QA alternatives, take the pairwise 
comparisons given in the slide.


Software testing plays a central role among the software QA activities. By running the software system 
or executing its prescribed functions, testers can determine if the observed system behavior conforms to 
its specifications or requirements. If discrepancies exist between the two, follow-up actions can be 
carried out to locate and remove the related problems in software code, which may also include modifying 
the software design. Therefore, the detection and removal of defects through testing help reduce the number 
of defects in delivered software products, thus helping to achieve the quality goals. Even if no discrepancy 
is observed, the specific instances can be accumulated as evidence to demonstrate that the software performs 
as specified. Consequently, testing is the most frequently used means to assure and to demonstrate software 
quality. A substantial part of this book is devoted to software testing, with an emphasis on commonly used 
techniques that have proven to be effective in various practical application environments.

Beyond testing, there are many other QA alternatives supported by related techniques and activities, such as 
inspection, formal verification, defect prevention, and fault tolerance. Inspection is a critical examination 
of software code or other artifacts by human inspectors to identify and remove problems directly, without 
resorting to execution. Fault tolerance prevents global system failures even if local problems exist, through
various redundancies strategically designed and implemented into the software systems. Other QA techniques 
employ specific means to assure software quality. This book also provides a comprehensive coverage of these topics.
